$PBExportHeader$pop_lb_from_db_union.srf
global type pop_lb_from_db_union from function_object
end type

forward prototypes
global function integer pop_lb_from_db_union (string col_parm, listbox lb_parm)
end prototypes

global function integer pop_lb_from_db_union (string col_parm, listbox lb_parm);string add_string, select_string
setpointer(hourglass!)
// Set up select statement using passed parameters
select_string = "SELECT DISTINCT " + col_parm + " FROM timercalls union " &
				  + "SELECT DISTINCT " + col_parm + " FROM pendingcalls union " &
				  + "SELECT DISTINCT " + col_parm + " FROM closedcalls" 

PREPARE sqlsa FROM :select_string;

DECLARE dyn_cursor DYNAMIC CURSOR FOR sqlsa;

OPEN DYNAMIC dyn_cursor;  
if sqlca.sqlcode < 0 then
	MessageBox("DataBase Error!", sqlca.sqlerrtext)
	return sqlca.sqlcode
end if 

lb_parm.SetRedraw(false)
lb_parm.Reset( )

Do While sqlca.sqlcode = 0
	Fetch dyn_cursor into :add_string;
	if sqlca.sqlcode = 0 then
		lb_parm.AddItem(add_string)
	elseif sqlca.sqlcode < 0 then
		MessageBox("DataBase Error", sqlca.sqlerrtext)
		return sqlca.sqlcode
	else
		exit
	end if
Loop

lb_parm.SetRedraw(true)
Close dyn_cursor;
return 0
end function

