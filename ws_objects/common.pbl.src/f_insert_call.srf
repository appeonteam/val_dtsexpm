$PBExportHeader$f_insert_call.srf
global type f_insert_call from function_object
end type

forward prototypes
global function boolean f_insert_call (integer calltable, ref string scallnumber, s_call icall)
end prototypes

global function boolean f_insert_call (integer calltable, ref string scallnumber, s_call icall);StartInsert:
if callTable = 1 then
	INSERT INTO "timercalls"  
         ( "call_number",   
           "call_indate",   
           "stat_code",   
           "room",   
           "guest",   
           "caller",   
           "problem",   
           "subproblem",   
           "problem_definition",   
           "complaint",   
           "receiver",   
           "shift",   
           "resolution",   
           "repairman",   
           "call_outdate",   
           "closed_by",   
           "closed_bydept",   
           "timer_number",   
           "timer_start",   
           "caller_category",   
           "problem_number",   
           "subproblem_number",   
           "timer1_start_min",   
           "timer2_start_min",   
           "timer1_reps",   
           "timer2_reps",   
           "auth_take_off_timer",   
           "default_status",   
           "pre_openable",   
           "pre_opened",   
           "timer_level",   
           "room_dsc",   
           "opened_status",
			  "paging_ind",
			  "init_paging_min",
			  "recur_ind",
				"recur_id") 
	 VALUES ( :icall.call_number,   
           :icall.call_indate,   
           :icall.stat_code,   
           :icall.room,   
           :icall.guest,   
           :icall.caller,   
           :icall.problem,   
           :icall.subproblem,   
           :icall.problem_definition,   
           :icall.complaint,   
           :icall.receiver,   
           :icall.shift,   
           :icall.resolution,   
           :icall.repairman,   
           :icall.call_outdate,   
           :icall.closed_by,   
           :icall.closed_bydept,   
           :icall.timer_number,   
           :icall.timer_start,   
           :icall.caller_category,   
           :icall.problem_number,   
           :icall.subproblem_number,   
           :icall.timer1_start_min,   
           :icall.timer2_start_min,   
           :icall.timer1_reps,   
           :icall.timer2_reps,   
           :icall.auth_take_off_timer,   
           :icall.default_status,   
           :icall.pre_openable,   
           :icall.pre_opened,   
           :icall.timer_level,   
           :icall.room_dsc,   
           :icall.opened_status,
			  :icall.paging_ind,
			  :icall.init_paging_min,
			  :icall.recur_ind,
			  :icall.recur_id)  ;
else
	if callTable = 2 then
		INSERT INTO "pendingcalls"  
         ( "call_number",   
           "call_indate",   
           "stat_code",   
           "room",   
           "guest",   
           "caller",   
           "problem",   
           "subproblem",   
           "problem_definition",   
           "complaint",   
           "receiver",   
           "shift",   
           "resolution",   
           "repairman",   
           "call_outdate",   
           "closed_by",   
           "closed_bydept",   
           "timer_number",   
           "timer_start",   
           "caller_category",   
           "problem_number",   
           "subproblem_number",   
           "timer1_start_min",   
           "timer2_start_min",   
           "timer1_reps",   
           "timer2_reps",   
           "auth_take_off_timer",   
           "default_status",   
           "pre_openable",   
           "pre_opened",   
           "timer_level",   
           "room_dsc",   
           "opened_status",
			  "paging_ind",
			  "init_paging_min",
			  "recur_ind",
			  "recur_id")  	
	 VALUES ( :icall.call_number,   
           :icall.call_indate,   
           :icall.stat_code,   
           :icall.room,   
           :icall.guest,   
           :icall.caller,   
           :icall.problem,   
           :icall.subproblem,   
           :icall.problem_definition,   
           :icall.complaint,   
           :icall.receiver,   
           :icall.shift,   
           :icall.resolution,   
           :icall.repairman,   
           :icall.call_outdate,   
           :icall.closed_by,   
           :icall.closed_bydept,   
           :icall.timer_number,   
           :icall.timer_start,   
           :icall.caller_category,   
           :icall.problem_number,   
           :icall.subproblem_number,   
           :icall.timer1_start_min,   
           :icall.timer2_start_min,   
           :icall.timer1_reps,   
           :icall.timer2_reps,   
           :icall.auth_take_off_timer,   
           :icall.default_status,   
           :icall.pre_openable,   
           :icall.pre_opened,   
           :icall.timer_level,   
           :icall.room_dsc,   
           :icall.opened_status,
			  :icall.paging_ind,
			  :icall.init_paging_min,
			  :icall.recur_ind,
			  :icall.recur_id)  ;
		else
			INSERT INTO "closedcalls"  
         ( "call_number",   
           "call_indate",   
           "stat_code",   
           "room",   
           "guest",   
           "caller",   
           "problem",   
           "subproblem",   
           "problem_definition",   
           "complaint",   
           "receiver",   
           "shift",   
           "resolution",   
           "repairman",   
           "call_outdate",   
           "closed_by",   
           "closed_bydept",   
           "timer_number",   
           "timer_start",   
           "caller_category",   
           "problem_number",   
           "subproblem_number",   
           "timer1_start_min",   
           "timer2_start_min",   
           "timer1_reps",   
           "timer2_reps",   
           "auth_take_off_timer",   
           "default_status",   
           "pre_openable",   
           "pre_opened",   
           "timer_level",   
           "room_dsc",   
           "opened_status",
			  "paging_ind",
			  "init_paging_min",
			  "recur_ind",
			  "recur_id")  	
	 VALUES ( :icall.call_number,   
           :icall.call_indate,   
           :icall.stat_code,   
           :icall.room,   
           :icall.guest,   
           :icall.caller,   
           :icall.problem,   
           :icall.subproblem,   
           :icall.problem_definition,   
           :icall.complaint,   
           :icall.receiver,   
           :icall.shift,   
           :icall.resolution,   
           :icall.repairman,   
           :icall.call_outdate,   
           :icall.closed_by,   
           :icall.closed_bydept,   
           :icall.timer_number,   
           :icall.timer_start,   
           :icall.caller_category,   
           :icall.problem_number,   
           :icall.subproblem_number,   
           :icall.timer1_start_min,   
           :icall.timer2_start_min,   
           :icall.timer1_reps,   
           :icall.timer2_reps,   
           :icall.auth_take_off_timer,   
           :icall.default_status,   
           :icall.pre_openable,   
           :icall.pre_opened,   
           :icall.timer_level,   
           :icall.room_dsc,   
           :icall.opened_status,
			  :icall.paging_ind,
			  :icall.init_paging_min,
			  :icall.recur_ind,
			  :icall.recur_id)  ;
		end if
end if

string ls_error, ls_code
if sqlca.sqlcode <> 0 then
	if sqlca.sqldbcode = -193 then// duplicate primary key 
		sCallNumber=string(f_new_call_number())
		Goto StartInsert // re-try insertion
	else
		ls_error =  sqlca.SQLerrtext
		ls_code	=  string( sqlca.SQLCode) 
		ROLLBACK;
		MessageBox('Database Insert Error', 'Failed to create new call record. ~r~n~r~nCode:'+ls_code+'~r~nMessage:'+ls_error)
		return false
	end if
end if

commit;
if sqlca.sqlcode < 0 then
	ls_error =  sqlca.SQLerrtext
	ls_code	=  string( sqlca.SQLCode) 
	ROLLBACK;
	MessageBox('Database Commit Error', 'Failed on commit. ~r~n~r~nCode:'+ls_code+'~r~nMessage:'+ls_error)
	return false
end if

return true
end function

